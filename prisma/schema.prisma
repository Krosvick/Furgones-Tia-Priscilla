// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}


model Apoderados {
  idApoderado  String      @id @default(uuid())
  nombre       String
  apellido     String
  rut         String   @unique
  telefono     String
  correo       String   @unique
  pupilos      Pupilos[]
  contrato   Contratos?  @relation(fields: [idContrato], references: [idContrato])
  idContrato   String? @unique
  pagos        Pagos[]
  CreatedAt    DateTime  @default(now())
  UpdatedAt    DateTime  @updatedAt
  DeletedAt    DateTime? 
}

model Direcciones {
  idDireccion String @id @default(uuid())
  calle String
  numero String
  comuna String
  ciudad String
  departamento String?
  detalle ContratoDetallePupilo[]
  CreatedAt    DateTime  @default(now())
  UpdatedAt    DateTime  @updatedAt
  DeletedAt    DateTime?

}

model Pupilos {
  idPupilo String      @id @default(uuid())
  nombre   String
  apellido String
  rut      String   @unique
  apoderado Apoderados @relation(fields: [idApoderado], references: [idApoderado])
  idApoderado String
  colegio String
  detalle ContratoDetallePupilo?
  CreatedAt    DateTime  @default(now())
  UpdatedAt    DateTime  @updatedAt
  DeletedAt    DateTime?

  @@index([idApoderado], name: "idApoderado")
}

enum EstadoPagoDetalle {
  Pagado
  Pendiente
  Atrasado
  Inactivo
}
model Pagos {
  idPago String @id @default(uuid())
  fechaInicio DateTime
  fechaTermino DateTime?  
  apoderado Apoderados @relation(fields: [idApoderado], references: [idApoderado])
  idApoderado String
  contrato Contratos @relation(fields: [idContrato], references: [idContrato])
  idContrato String
  estado EstadoPagoDetalle @default(Inactivo)
  monto Int
  fechaPago DateTime?
  CreatedAt    DateTime  @default(now())
  UpdatedAt    DateTime  @updatedAt
  DeletedAt    DateTime?

  @@index([idApoderado], name: "idApoderado")
  @@index([idContrato])
}

enum TiposDeContrato {
  ida
  vuelta
  idaYvuelta
}

model Contratos {
  idContrato String @id @default(uuid())
  nombre      String?
  descripcion String?
  fechaInicio DateTime
  fechaTermino DateTime?
  pagos        Pagos[]
  idPago       String?
  detallesContrato ContratoDetallePupilo[]
  Apoderado Apoderados?
  CreatedAt    DateTime  @default(now())
  UpdatedAt    DateTime  @updatedAt
  DeletedAt    DateTime?

  @@index([idPago], name: "idPago")
}

model ContratoDetallePupilo {
  idTipoDeContrato String @id @default(uuid())
  precio Int
  direccion Direcciones[]
  tipo TiposDeContrato
  contrato Contratos @relation(fields: [idContrato], references: [idContrato])
  idContrato String
  pupilo Pupilos @relation(fields: [idPupilo], references: [idPupilo])
  idPupilo String @unique
  CreatedAt    DateTime  @default(now())
  UpdatedAt    DateTime  @updatedAt
  DeletedAt    DateTime?

  @@index([idContrato], name: "idContrato")
  @@index([idPupilo], name: "idPupilo")
}